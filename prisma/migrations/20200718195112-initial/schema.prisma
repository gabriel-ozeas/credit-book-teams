generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Session {
  id                 String    @default(uuid()) @id
  userId             String
  user               User      @relation(fields: [userId], references: [id])
  accessToken        String    @default(cuid()) @unique
  sessionToken       String    @default(cuid()) @unique
  accessTokenExpires DateTime?
  expires            DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt @default(now())
}

model Account {
  id                 String    @default(uuid()) @id
  compoundId         String    @unique
  userId             String
  user               User      @relation(fields: [userId], references: [id])
  providerId         String
  providerType       String
  providerAccountId  String    @unique
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt @default(now())
}

model VerificationRequest {
  id         String   @default(uuid()) @id
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt @default(now())
}

model User {
  id             String     @default(uuid()) @id
  email          String?    @unique
  emailVerified  DateTime?
  image          String?
  name           String?
  sessions       Session[]
  accounts       Account[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt @default(now())
  teams          UserTeam[]
  claimedCredits Credit[]   @relation("ClaimedCredits")
  createdCredits Credit[]   @relation("CreatedCredits")

}

model Team {
  id                 String     @default(uuid()) @id
  joinCode           String?
  joinCodeExpiration DateTime?
  teamName           String
  credits            Credit[]
  users              UserTeam[]
}

model UserTeam {
  role   String
  teamId String
  team   Team   @relation(fields: [teamId], references: [id])
  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@id([teamId, userId])

}

model Credit {
  claimedAt   DateTime?
  claimedById String?
  claimedBy   User?     @relation("ClaimedCredits", fields: [claimedById], references: [id])
  createdAt   DateTime  @default(now())
  createdById String?
  createdBy   User?     @relation("CreatedCredits", fields: [createdById], references: [id])
  dollarValue Int?
  itemValue   String?
  id          String    @default(uuid()) @id
  name        String?
  phone       String?
  reason      String?
  teamId      String
  team        Team      @relation(fields: [teamId], references: [id])

}
